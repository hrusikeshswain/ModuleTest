name: Animal Farm NodeJS CI
on:
  push:
    branches:
      - main    
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '18.x'
    - name: Run Yarn 
      run: yarn
    - name: Run tests
      run: yarn test
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      # - name: Run Tests
      #   run: bash ./gradlew test --stacktrace  
  apk:
    name: Generate APK
    # needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # - name: Setup JDK
      #   uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'gradle'
      - name: Change wrapper permissions
        run: |
          echo "A initial message"
          cd android
          chmod +x ./gradlew
          ./gradlew assembleDebug
    #   - run: |
    #     echo "A initial message"
    #     pip install -r requirements.txt
    #     echo "Another message or command"
    #     python myscript.py
    #     bash some-shell-script-file.sh -xe
    #  - run: echo "One last message"    
        # working_directory: ./android

      # # Run Tests Build
      # - name: Run gradle tests
      #   run: ./gradlew test

      # Run Build Project
      # - name: Build gradle project
      #   run: |
      #     echo "Build gradle"
      #     cd android
      #     ./gradlew build    
      # - name: Build APK
      #   run: |
      #     echo "Assemble Debug"
      #     cd android
      #     ./gradlew assembleDebug
      # - name: Build Release APK
      #   run: |
      #     echo "Assemble"
      #     cd android
      #     ./gradlew assemble  
      # - name: Upload APK
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: apk
      #     path: app/build/outputs/apk/debug/app-debug.apk       